filter {
  if [type] == "nginx-access" {
    grok {
      match => [
        "message", "%{IPORHOST:http_host} %{IPORHOST:clientip} \[%{HTTPDATE:httptimestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent} %{NUMBER:request_time:float} %{NUMBER:upstream_time:float} \"(%{NUMBER:user_id:int}|-)?\" \"(%{UUID:request_id}|-)?\"",
        "message", "%{IPORHOST:http_host} %{IPORHOST:clientip} \[%{HTTPDATE:httptimestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent} %{NUMBER:request_time:float} %{NUMBER:upstream_time:float}",
        "message", "%{IPORHOST:http_host} %{IPORHOST:clientip} \[%{HTTPDATE:httptimestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent} %{NUMBER:request_time:float}"
      ]
      add_field => [ "received_at", "%{@timestamp}" ]
    }
    date {
      match => [ "httptimestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
    }
    geoip {
      source => "clientip"
    }
    mutate {
      remove_field => [ "httptimestamp", "agent", "bytes", "httpversion", "message", "upstream_time", "timestamp" ]
    }
  }

  if "_grokparsefailure" in [tags] {
    drop { }
  }
}